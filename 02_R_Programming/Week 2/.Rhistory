# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
source("pollutantmean.R")
length(as.character(directory),1)
length<- (as.character(directory),1)
as.character(directory)
csvData
csvTemp
i
id
pollutantmean <- function(directory, pollutant, id = 1:332)
{
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
return(mean(x,na.rm = TRUE)
}
return(mean(x,na.rm = TRUE))
return(mean(x,na.rm = TRUE))
mean(x,na.rm = TRUE)
pollutantmean <- function(directory, pollutant, id = 1:332)
{
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 23:65)
csvData
Col_id
directory
id
i
id <- 23:65
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
csvData
csvTemp
i
print(id)
id <- 17
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
csvTemp
i
id
read.csv(file_list[i])
csvData[Col_id]
csvDataSingleCol
csvData$nitrate
csvData$sulfate
x <- csvData[Col_id]
x
mean(x,na.rm = TRUE)
mean(csvData[Col_id],na.rm = TRUE)
as.numeric(csvData[Col_id])
mean(csvData[Col_id],na.rm = TRUE)
Col_id
csvData$sulfate
csvDataSingleCol
csvData$sulfate
mean(x,na.rm = TRUE)
pollutantmean <- function(directory, pollutant, id = 1:332)
{
print(id)
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
id <- 17
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 17)
pollutantmean <- function(directory, pollutant, id = 1:332)
{
print(id)
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
id <- 17
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
x <- csvData[Col_id]
#         # Calculate the Median
#           if (pollutant =="nitrate") x <- csvData$nitrate
#           if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 17)
x <- csvDataSingleCol
csvDataSingleCol
mean(x,na.rm = TRUE)
csvData[17]
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
mean(x,na.rm = FALSE)
return(mean(x,na.rm = FALSE))
pollutantmean <- function(directory, pollutant, id = 1:332)
{
print(id)
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
id <- 17
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
#
#         # Extract single Column, eighter "nitrate" or "sulfate" via Col_id
#           csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = FALSE)
}
pollutantmean("specdata", "sulfate", 17)
pollutantmean <- function(directory, pollutant, id = 1:332)
{
print(id)
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
id <- 17
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
#
#         # Extract single Column, eighter "nitrate" or "sulfate" via Col_id
#           csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 17)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332)
{
print(id)
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
#
#         # Extract single Column, eighter "nitrate" or "sulfate" via Col_id
#          csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:11)
submit()
pollutantmean <- function(directory, pollutant, id = 1:332)
{
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
#
#         # Extract single Column, eighter "nitrate" or "sulfate" via Col_id
#          csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:11)
submit()
submit()
submit()
is.character(directory)
#------------------------------------------------------------------------
pollutantmean <- function(directory, pollutant, id = 1:332)
{
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
#
#         # Extract single Column, eighter "nitrate" or "sulfate" via Col_id
#          csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
is.character(directory)
csvTemp <- as.data.frame(read.csv(file_list[i]))
csvTemp
id
i
i <- 0
Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
#               csvData <- c(csvTemp)
}
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
}
csvTempF
csvTempF
print(csvTempF)
csvData <- c(csvTempF)
csvData
csvData[2]
csvTempF <- verctor()
csvTempF <- vector()
csvTempF <- data.frame
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
csvData <- c(csvTempF)
}
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
csvData$nitrate
csvData[2]
csvData[nitrate]
csvData[]
csvData["nitrate"]
csvData[1]
mean(csvData[Col_id],na.rm = TRUE)
mean(csvData[2],na.rm = TRUE)
mean(x,na.rm = TRUE)
rowsum.data.frame(csvTempF)
sum(csvTempF[1])
count.fields(csvTempF[1])
i <- 0
id <- 5
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
#               csvData <- c(csvTemp)
}
csvTempF
id <- 10
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
#               csvData <- c(csvTemp)
}
csvTempF
csvTempF <- data.frame
csvTempF
csvData <- vector()
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
csvData <- c(csvTemp)
}
i
csvData
id
id <- 32
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
csvData <- c(csvTemp)
}
csvData
csvData <- c(csvTempF)
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
csvData <- c(csvTempF)
}
csvData
i <- 12
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
csvData <- c(csvTempF)
}
csvData
for(i in id) {
csvTempF <- as.data.frame(read.csv(file_list[i]))
csvData <- c(csvTempF)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:11)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
#   csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:11)
mean(as.vector(csvData$nitrate) ,na.rm = TRUE)
mean(csvData$nitrate ,na.rm = TRUE)
mean(x ,na.rm = TRUE)
mean(csvData$sulfate ,na.rm = TRUE)
mean(x ,na.rm = TRUE)
mean(csvData$sulfate ,na.rm = TRUE)
mean(csvData$nitrate
mean(x ,na.rm = TRUE)
mean(csvData$sulfate ,na.rm = TRUE)
mean(csvData$nitrate ,na.rm = TRUE)
mean(csvData[Col_Id] ,na.rm = TRUE)
Col_Id <- 2
mean(csvData[Col_Id] ,na.rm = TRUE)
pollutantmean <- function(directory, pollutant, id = 1:332)
{
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
as.character(directory)
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
#
#         # Extract single Column, eighter "nitrate" or "sulfate" via Col_id
#          csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
file_list
file_list
nrow(file_list)
file_list <- matrix(list.files(directory,full.names = TRUE))
nrow(file_list)
nrow(as.matrix(file_list)
nrow(as.matrix(file_list))
nrow(as.matrix(file_list))
dFile <- read.csv(file_list[i])
dfile
file_list <- list.files(directory,full.names = TRUE)
iFiles <- nrow(as.matrix(file_list))
file_list <- list.files(directory,full.names = TRUE)
directory ="specdata"
directory <="specdata"
directory <- "specdata"
directory <- "specdata"
file_list <- list.files(directory,full.names = TRUE)
iFiles <- nrow(as.matrix(file_list))
BigOneFile <- data.frame()
i<-1
dFile <- read.csv(file_list[i])
dFile
dFile_cleanIndex <- complete.cases(dFile))
dFile_cleanIndex <- (complete.cases(dFile))
dFile_cleanIndex
dFileCleanIndex <- (complete.cases(dFile))
dFileCleanIndex
dFile[dFileCleanIndex]
i<-1
dFile <- read.csv(file_list[i])
dFileCleanIndex <- (complete.cases(dFile))
dFile[dFileCleanIndex]
i<-1
dFile <- read.csv(file_list[i])
dFile
(complete.cases(dFile))
dFileCleanIndex <- (complete.cases(dFile))
dFileCleanIndex
dFile[dFileCleanIndex]
dFile <- vector()
i<-1
dFile <- read.csv(file_list[i])
dFileCleanIndex <- (complete.cases(dFile))
dFile[dFileCleanIndex]
dFileCleanIndex <- complete.cases(dFile)
dFile[dFileCleanIndex]
dFile[dFileCleanIndex,]
BigOneFile <- rbind(BigOneFile,dFile[dFileCleanIndex,])
BigOneFile
is.na
nrow(as.matrix(BigOneFile))
i<-2
dFile <- read.csv(file_list[i])
dFileCleanIndex <- complete.cases(dFile)
dFile[dFileCleanIndex,]
BigOneFile <- rbind(BigOneFile,dFile[dFileCleanIndex,])
BigOneFile
nrow(as.matrix(BigOneFile))
?cor
BigOneFile <- data.frame(na.rm = TRUE)
dFile <- read.csv(file_list[i])
BigOneFile <- rbind(BigOneFile,dFile)
BigOneFile <- dFile
BigOneFile
BigOneFile <- as.data.frame(dFile,na.rm = TRUE)
BigOneFile
BigOneFile <- data.frame()
