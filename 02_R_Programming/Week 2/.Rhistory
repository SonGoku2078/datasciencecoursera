print(i)
}
print("After Loop")
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
print("check 3")
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
print("check 4")
if (pollutant =="sulfate") x <- csvData$sulfate
print("check 5")
median(x,na.rm = TRUE)
}
pollutantmean("specdata", "nitrate", 2:3)
i<-0
pollutantmean("specdata", "nitrate", 2:3)
for(i in 1:10) {
print(i)
}
for(i in id) {
#               csvTemp <- read.csv(csvFiles[i])
#               csvData <- c(csvTemp)
print(i)
}
#------------------
# Function
#------------------
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
ifelse (pollutant =="sulfate",Col_id <- 2,Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Get specific files (Monitor) based on "id"
csvFiles <- file_list[id]
print("check 1")
# Read all specific Files into one Vektor
print("i =",i)
print(i)
print("id =",i)
print(id)
print("befor Loop")
for(i in id) {
#               csvTemp <- read.csv(csvFiles[i])
#               csvData <- c(csvTemp)
print(i)
}
print("After Loop")
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
print("check 3")
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
print("check 4")
if (pollutant =="sulfate") x <- csvData$sulfate
print("check 5")
median(x,na.rm = TRUE)
}
pollutantmean("specdata", "nitrate", 2:3)
pollutantmean("specdata", "nitrate", 15:85)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
ifelse (pollutant =="sulfate",Col_id <- 2,Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Get specific files (Monitor) based on "id"
csvFiles <- file_list[id]
print("check 1")
# Read all specific Files into one Vektor
print("i =",i)
print(i)
print("id =",i)
print(id)
print("befor Loop")
for(i in id) {
csvTemp <- read.csv(csvFiles[id])
csvData <- c(csvTemp)
print(i)
}
print("After Loop")
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
print("check 3")
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
print("check 4")
if (pollutant =="sulfate") x <- csvData$sulfate
print("check 5")
median(x,na.rm = TRUE)
}
pollutantmean("specdata", "nitrate", 15:85)
csvFiles
file_list
id <-0
pollutantmean("specdata", "nitrate", 15:85)
csvFiles
file_list
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
ifelse (pollutant =="sulfate",Col_id <- 2,Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Get specific files (Monitor) based on "id"
csvFiles <- file_list[id]
print("check 1")
# Read all specific Files into one Vektor
print("i =",i)
print(i)
print("id =",i)
print(id)
print("befor Loop")
for(i in id) {
#               csvTemp <- read.csv(csvFiles[id])
csvTemp <- read.csv(file_list[id])
csvData <- c(csvTemp)
print(i)
}
print("After Loop")
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
print("check 3")
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
print("check 4")
if (pollutant =="sulfate") x <- csvData$sulfate
print("check 5")
median(x,na.rm = TRUE)
}
pollutantmean("specdata", "nitrate", 15:85)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
ifelse (pollutant =="sulfate",Col_id <- 2,Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Get specific files (Monitor) based on "id"
csvFiles <- file_list[id]
print("check 1")
# Read all specific Files into one Vektor
print("i =",i)
print(i)
print("id =",i)
print(id)
print("befor Loop")
for(i in id) {
#               csvTemp <- read.csv(csvFiles[id])
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
print(i)
}
print("After Loop")
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
print("check 3")
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
print("check 4")
if (pollutant =="sulfate") x <- csvData$sulfate
print("check 5")
median(x,na.rm = TRUE)
}
i  <-0
id <-0
pollutantmean("specdata", "nitrate", 15:85)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
ifelse (pollutant =="sulfate",Col_id <- 2,Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Get specific files (Monitor) based on "id"
csvFiles <- file_list[id]
print("check 1")
# Read all specific Files into one Vektor
print("i =",i)
print(i)
print("id =",i)
print(id)
print("befor Loop")
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
print(i)
}
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
print("check 3")
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
print("check 4")
if (pollutant =="sulfate") x <- csvData$sulfate
print("check 5")
median(x,na.rm = TRUE)
}
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 23)
pollutantmean("specdata", "sulfate", 1:10)
mean(x,na.rm = TRUE)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
ifelse (pollutant =="sulfate",Col_id <- 2,Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Get specific files (Monitor) based on "id"
csvFiles <- file_list[id]
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant     =="nitrate") Col_id <- 3
if (pollutant     =="sulfate") Col_id <- 2
ifelse (pollutant =="sulfate", Col_id <- 2, Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Get specific files (Monitor) based on "id"
#           csvFiles <- file_list[id]
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant      =="nitrate") Col_id <- 3
if (pollutant      =="sulfate") Col_id <- 2
if else (pollutant =="sulfate", Col_id <- 2, Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
#------------------------------------------------------------------------
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant      =="nitrate") Col_id <- 3
if (pollutant      =="sulfate") Col_id <- 2
#           if else (pollutant =="sulfate", Col_id <- 2, Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 1:10)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant      =="nitrate") Col_id <- 3
if (pollutant      =="sulfate") Col_id <- 2
print(Col_id)
#           if else (pollutant =="sulfate", Col_id <- 2, Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "nitrate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
file_list
csvData
csvTemp
pollutantmean("specdata", "sulfate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant      =="nitrate") Col_id <- 3
if (pollutant      =="sulfate") Col_id <- 2
print(Col_id)
#           if else (pollutant =="sulfate", Col_id <- 2, Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
print(mean(x,na.rm = TRUE))
print(median(x,na.rm = TRUE))
}
pollutantmean("specdata", "sulfate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant      =="nitrate") Col_id <- 3
if (pollutant      =="sulfate") Col_id <- 2
print(Col_id)
#           if else (pollutant =="sulfate", Col_id <- 2, Col_id <- 9)
# Read Directory with all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate"
csvDataSingleCol <- csvData[Col_id]
# Calc Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Preparation of internal values
if (pollutant =="nitrate") Col_id <- 3
if (pollutant =="sulfate") Col_id <- 2
# Read Directory for gathering all csv-files Names (all Files)
file_list <- list.files(directory,full.names = TRUE)
# Read all specific Files (Monitor) based on "id"
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
# Extract single Column, eighter "nitrate" or "sulfate" via Col_id
csvDataSingleCol <- csvData[Col_id]
# Calculate the Median
if (pollutant =="nitrate") x <- csvData$nitrate
if (pollutant =="sulfate") x <- csvData$sulfate
mean(x,na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 23)
pollutantmean("specdata", "sulfate", 20:70)
directory <- "specdata"
file_list <- list.files(directory,full.names = TRUE)
file_list
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
id <- 23
for(i in id) {
csvTemp <- read.csv(file_list[i])
csvData <- c(csvTemp)
}
dFrame <- data.frame()
dFile <- read.csv(file_list[id])
dFile
good_data <- complete.cases(dFile)
dFile[good_data,]
str(dFile[good_data,])
Head(dFile[good_data,])
head(dFile[good_data,])
summary(dFile[good_data,])
NoRowperFile <- count.fields(dFile[good_data,])
tempdata  <- dFile[good_data,]
tempdata
NoRowperFile <- count(tempdata,Date)
NoRowperFile <- count.fields(tempdata,Date)
NoRowperFile <- count.fields(tempdata,"Date")
NoRowperFile <- count.fields("tempdata")
tempdata  <- dFile[good_data,]
tempdata
NoRowperFile <- count.fields("tempdata")
NoRowperFile <- count.fields(tempdata,"Date")
library("plyr", lib.loc="~/R/win-library/3.1")
install.packages("plyr")
library("plyr")
dFrame  <- dFile[good_data,]
dFrame
NoRowperFile <- count (dFrame)
NoRowperFile
temp <- subset(dFrame  <- dFile[good_data,])
temp
temp <- subset(dFrame  <- dFile[good_data,])$date
temp
good_data
dFrame
temp <- subset(dFrame)$date
temp
temp <- subset(dFrame)$Date
temp
temp <- sum(dFile,na.rm = TRUE)
dFrame <- sum(dFile,na.rm = TRUE)
dFrame <- read.csv(file_list[id])
temp <- sum(dFrame,na.rm = TRUE)
temp <- sum(complete.cases(dFile)
temp
temp <- sum(complete.cases(dFile))
temp
good_data <- complete.cases(dFile)
good_data
dFrame  <- dFile[good_data,]
dFrame
dFile <- read.csv(file_list[id])
rowCount <- sum(complete.cases(dFile))
rowCount
summary("dFile")
summary(dFile)
name(dFile)
names(dFile)
file_list
file_list <- list.files(directory,full.names = FALSE)
file_list
file_list[1]
tmp <- substr(file_list[1],1,3)
tmp
dFrame  <- c(fileNo,rowCount)
fileNo   <- substr(file_list[1],1,3)
dFrame  <- c(fileNo,rowCount)
dFrame
fileNo   <- substr(file_list[3],1,3)
dFrame  <- c(fileNo,rowCount)
dFrame
fileNo   <- substr(file_list[1],1,3)
dFrame  <- c(fileNo,rowCount)
dFrame
fileNo   <- substr(file_list[25],1,3)
dFrameTmp <- data.frame()
fileNo   <- substr(file_list[1],1,3)
dFrameTmp  <- c(fileNo,rowCount)
dFrame  <- C(dFrameTmp)
dFrame  <- c(dFrameTmp)
fileNo   <- substr(file_list[25],1,3)
fileNo
dFrameTmp  <- c(fileNo,rowCount)
dFrameTmp
dFrame  <- c(dFrameTmp)
dFrame
dFrame  <- rbind(dFrame,dFrameTmp)
dFrame
dFrame  <- rbind(dFrame,c(fileNo,rowCount)
dFrame
Temp  <- c(fileNo,rowCount)
dFrame  <- rbind(dFrame,Temp)
dFrame
row.names.data.frame(dFrame)
row.names(dFrame)
dFrame <- data.frame(row.names ="fileNo","count")
dFrame
dFrame  <- rbind(dFrame,Temp)
Temp  <- c(fileNo,rowCount)
dFrame  <- rbind(dFrame,Temp)
Temp
rowCount <- sum(complete.cases(dFile))
rowCount
fileNo   <- substr(file_list[25],1,3)
fileNo
dFrame
Temp  <- c(fileNo,rowCount)
Temp
rbind(dFrame,Temp)
fileNo   <- substr(file_list[1],1,3)
fileNo
source('~/.active-rstudio-document', echo=TRUE)
Temp  <- c(fileNo,rowCount)
Temp
dFrame
fileNo
dFrame  <- rbind(dFrame,Temp)
help(rbind)
